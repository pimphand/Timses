<?php

namespace App\Console\Commands;

use App\Models\Tps;
use Illuminate\Console\Command;
use Laravolt\Indonesia\Models\Village;

class GenerateTps extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'app:generate-tps';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Command description';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $villages = [
            26240,
            26241,
            26242,
            26243,
            26244,
            26245,
            26246,
            26247,
            26248,
            26249,
            26250,
            26251,
            26252,
            26253,
            26254,
            26255,
            26256,
            26257,
            26258,
            26259,
            26260,
            26261,
            26262,
            26263,
            26264,
            26265,
            26266,
            26267,
            26268,
            26269,
            26270,
            26271,
            26272,
            26273,
            26274,
            26275,
            26276,
            26277,
            26278,
            26279,
            26280,
            26281,
            26282,
            26283,
            26284,
            26285,
            26286,
            26287,
            26288,
            26289,
            26290,
            26291,
            26292,
            26293,
            26294,
            26295,
            26296,
            26297,
            26298,
            26299,
            26300,
            26301,
            26302,
            26303,
            26304,
            26305,
            26306,
            26307,
            26308,
            26309,
            26310,
            26311,
            26312,
            26313,
            26314,
            26315,
            26316,
            26317,
            26318,
            26319,
            26320,
            26321,
            26322,
            26323,
            26324,
            26325,
            26326,
            26327,
            26328,
            26329,
            26330,
            26331,
            26332,
            26333,
            26334,
            26335,
            26336,
            26337,
            26338,
            26339,
            26340,
            26341,
            26342,
            26343,
            26344,
            26345,
            26346,
            26347,
            26348,
            26349,
            26350,
            26351,
            26352,
            26353,
            26354,
            26355,
            26356,
            26357,
            26358,
            26359,
            26360,
            26361,
            26362,
            26363,
            26364,
            26365,
            26366,
            26367,
            26368,
            26369,
            26370,
            26371,
            26372,
            26373,
            26374,
            26375,
            26376,
            26377,
            26378,
            26379,
            26380,
            26381,
            26382,
            26383,
            26384,
            26385,
            26386,
            26387,
            26388,
            26389,
            26390,
            26391,
            26392,
            26393,
            26394,
            26395,
            26396,
            26397,
            26398,
            26399,
            26400,
            26401,
            26402,
            26403,
            26404,
            26405,
            26406,
            26407,
            26408,
            26409,
            26410,
            26411,
            26412,
            26413,
            26414,
            26415,
            26416,
            26417,
            26418,
            26419,
            26420,
            26421,
            26422,
            26423,
            26424,
            26425,
            26426,
            26427,
            26428,
            26429,
            26430,
            26431,
            26432,
            26433,
            26434,
            26435,
            26436,
            26437,
            26438,
            26439,
            26440,
            26441,
            26442,
            26443,
            26444,
            26445,
            26446,
            26447,
            26448,
            26449,
            26450,
            26451,
            26452,
            26453,
            26454,
            26455,
            26456,
            26457,
            26458,
            26459,
            26460,
            26461,
            26462,
            26463,
            26464,
            26465,
            26466,
            26467,
            26468,
            26469,
            26470,
            26471,
            26472,
            26473,
            26474,
            26475,
            26476,
            26477,
            26478,
            26479,
            26480,
            26481,
            26482,
            26483,
            26484,
            26485,
            26486,
            26487,
            26488,
            26489,
            26490,
            26491,
            26492,
            26493,
            26494,
            26495,
            26496,
            26497,
            26498,
            26499,
            26500,
            26501,
            26502,
            26503,
            26504,
            26505,
            26506,
            26507,
            26508,
            26509,
            26510,
            26511,
            26512,
            26513,
            26514,
            26515,
            26516,
            26517,
            26518,
            26519,
            26520,
            26521,
            26522,
            26523,
            26524,
            26525,
            26526,
            26527,
            26528,
            26529,
            26530,
            26531,
            26532,
            26533,
            26534,
            26535,
            26536,
            26537,
            26538,
            26539,
            26540,
            26541,
            26542,
            26543,
            26544,
            26545,
            26546,
            26547,
            26548,
            26549,
            26550,
            26551,
            26552,
            26553,
            26554,
            26555,
            26556,
            26557,
            26558,
            26559,
            26560,
            26561,
            26562,
            26563,
            26564,
            26565,
            26566,
            26567,
            26568,
            26569,
            26570,
            26571,
            26572,
            26573,
            26574,
            26575,
            26576,
            26577,
            26578,
            26579,
            26580,
            26581,
            26582,
            26583,
            26584,
            26585,
            26586,
            26587,
            26588,
            26589,
            26590,
            26591,
            26592,
            26593,
            26594,
            26595,
            26596,
            26597,
            26598,
            26599,
            26600,
            26601,
            26602,
            26603,
            26604,
            26605,
            26606,
            26607,
            26608,
            26609,
            26610,
            26611,
            26612,
            26613,
            26614,
            26615,
            26616,
            26617,
            26618,
            26619,
            26620,
            26621,
            26622,
            26623,
            26624,
            26625,
        ];

        foreach ($villages as $village) {
            $tps = [];
            for ($i = 1; $i <= 15; $i++) {
                $vil = Village::find($village);

                $tps = [
                    'id' => \Str::uuid(),
                    'name' => 'TPS '.$i,
                    'village_id' => $vil->id,
                    'district_id' => $vil->district->id,
                ];

                Tps::create($tps);
            }
        }
    }
}
